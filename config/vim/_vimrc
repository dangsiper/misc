set nocompatible
set cscopeprg=gtags-cscope
set cscopequickfix=s-,c-,d-,i-,t-,e-,g-,f-
set cst
set cursorline
set hlsearch
set incsearch
set ignorecase
set smartcase
set nobackup
set noswapfile
set undofile
set undodir=~/tmp
set wrap
set laststatus=2
set statusline=%F%m%r\ (%l,\ %c)\ %p%%
set smarttab
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent
set autoread
set showcmd
set backspace=indent,eol,start
set fileencodings=utf-8,gb2312,cp936
set termencoding=utf-8
set encoding=utf-8
set cm=blowfish2
set updatetime=1000
if !has("gui_running")
    set mouse-=a
else
    if has('win32')
        set guifont=Consolas:h15:cANSI
    elseif has('unix')
        set guifont=Monospace\ 15
    endif
    set mouse+=a
    nmap <C-RightMouse> <C-O>
endif
syntax on
filetype plugin indent on
language C
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
let g:ctrlp_use_caching = 1
let g:ctrlp_clear_cache_on_exit = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_lazy_update = 1
let g:ctrlp_max_files = 0
let g:ctrlp_extensions = ['funky']
fun! CurDirShell()
    cd %:h
    if !has("gui_running")
        shell
    else
        if has('win32')
            silent shell
        else
            shell
        endif
    endif
    cd -
endfun
fun! FindSession()
    if filereadable("Session.vim")
        source Session.vim
        au VimLeave * :mksession!
    else
        let lpath = getcwd()
        cd ..
        if lpath == getcwd()
            return -1
        endif
        return FindSession()
    endif
endfun
fun! AddSession()
    let path = getcwd()
    if FindSession() == -1
        exec "cd" path
    endif
endfun
fun! FindGtags()
    if filereadable("GTAGS")
        cs add GTAGS
        return 0
    else
        let lpath = getcwd()
        cd ..
        if lpath == getcwd()
            return -1
        endif
        return FindGtags()
    endif
endfun
fun! AddCs()
    if isdirectory(expand("%:p:h"))
        if cscope_connection() == 0
            cd %:h
            if FindGtags() == -1
                cd %:h
            endif
        endif
    endif
endfun
if filereadable("GTAGS")
    cs add GTAGS
endif
au BufRead *.cxx,*.cc,*.cpp,*.c,*.hpp,*.h,Makefile*,makefile* call AddCs()
au BufRead,BufWritePost *.cxx,*.cc,*.cpp,*.c,*.hpp,*.h TlistUpdate
au BufRead * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
cmap <C-V> <C-R>+
imap <C-A> <C-O>^
imap <C-B> <C-C><C-B>
imap <C-D> <C-O><C-D>
imap <C-E> <C-O>$
imap <C-L> <C-O>:TlistToggle<CR>
imap <C-R> <C-O>:redo<CR>
imap <C-S> <C-O>:w<CR>
imap <C-U> <C-O>:undo<CR>
imap <C-V> <C-O>"+P
imap <C-X> <C-O>"+d
imap <C-Z> <C-O><C-Z>
nmap <C-A> ^
nmap <C-B> :CtrlPMRUFiles<CR>
nmap <C-C>c :cclose<CR>
nmap <C-C>n :cnext<CR>
nmap <C-C>o :copen<CR>
nmap <C-C>p :cprevious<CR>
nmap <C-D> :!start /B echo ^<head^>^<meta charset="utf-8"^>^</head^> >\%TMP\%/%:t.html&&markdown % >>\%TMP\%/%:t.html&&\%TMP\%/%:t.html<CR><CR>
nmap <C-E> $
nmap <C-F>f :cs find g 
nmap <C-F>g :cs find g <C-R><C-W>
nmap <C-F>i :cs find f <C-R><C-F>
nmap <C-F>s :cs find s <C-R><C-W>
nmap <C-G>g :!global -u<CR>
nmap <C-G>s :call AddSession()<CR>
nmap <C-L> :TlistToggle<CR>
nmap <C-N> :e %:h<CR>
nmap <C-R> :redo<CR>
nmap <C-S> :w<CR>
nmap <C-U> :undo<CR>
nmap mm :vim /^#.*#$/ %<CR>:copen<CR>
nmap ss :call CurDirShell()<CR>
vmap <C-C> "+y
vmap <C-F> "+y<C-C>:vim "<C-R>"" %<CR>:copen<CR>
